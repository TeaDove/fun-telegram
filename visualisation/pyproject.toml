[tool.poetry]
name = "visualisation"
version = "0.1.0"
description = ""
authors = ["pibragimov <pibragimov@whoosh.bike>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.0.1"
matplotlib = "^3.7.1"
fastapi = "^0.95.2"
uvicorn = "^0.22.0"
jupyterlab = "^4.0.9"
ujson = "^5.9.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
profile = "black"
multi_line_output=3
include_trailing_comma = true
default_section = "FIRSTPARTY"
known_third_party = ["dict_merger","orjson","telegram","shapely", "dependency_injector","cache","structlog","tenacity","dependency_injector","phonenumbers",
    "phone_iso3166","boto3","botocore","aws_xray_sdk","rediscluster","geopy","starlette","aiobotocore","aioboto3",
    "aws_lambda_powertools","aws-xray-sdk","awsiotsdk","alembic","sqlalchemy","geoalchemy2","aredis","redis",
    "psycopg2","asyncpg","pynamodb","backoff","requests","aiohttp","uvloop","fastapi","mangum","jwt",
    "slackclient","celery","uvicorn","cachetools","locust","typer","aiogram","humps","pydantic","pytz",
    "ujson","returns","loguru","tqdm","pytz", "whoosh", "payment_page_sdk"]
sections = ["STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]

[tool.black]
line-length = 120
target-version = ['py39']

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = ["unit", "integration"]

[tool.flake8]
ignore = [
    "D203", "E203", "W503", "SCS108",
    "R502", "R501", "R504", "R503", "PIE781",
    "PIE786", "PIE798", "PIE803", "PIE785",
    "PIE797", "S105", "ECE001", "ANN101", "ANN102", "ANN002", "ANN003"
    ]
exclude = [
    "**/__pycache__",
    "**/tests/*",
    "**/alembic/versions/*",
    "**/python",
    "**/.venv",
    "**/build/",
    "**/old/*"
]
max-complexity = 10
max-line-length = 120
extend-immutable-calls = [
    "Depends", "fastapi.Depends", "fastapi.params.Depends",
    "Header", "Query", "Path", "Option", "typer.Option",
    "HasAnyAuthority", "HasAnyScope"
]

kwargs-max-positional-arguments = 4
kwargs-ignore-function-pattern-extend = '(select)|(where)|(and_)|(or_)|(ST_\w*)|(json_build_object)|(group_by)|(execute_command)'

noqa-require-code = true

suppress-dummy-args = true

[tool.mypy]
namespace_packages=true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
no_warn_no_return = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

# Output configuration
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
